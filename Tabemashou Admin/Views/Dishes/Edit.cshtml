@using Tabemashou_Admin.Models
@model DishRegister

@{
    ViewBag.Title = "Edit a Dish";
    ViewBag.Breadcrumb = new Breadcrumb(new[]{
        new Crumb("Restaurants", @Url.Action("Index","Restaurants"), "fa-cutlery"),
        new Crumb(Model.restaurant.Name, @Url.Action("Index", "Locals", new { id = Model.idRestaurant })),
        new Crumb("Menu", "","fa-spoon"),
        new Crumb(Model.dish.Name, "", ""),

    });
}


@Styles.Render("~/AdminLTE/plugins/select2/css")
@Styles.Render("~/AdminLTE/dist/css")

@if (!ViewContext.ViewData.ModelState.IsValid )
{
    <div class="alert alert-danger alert-dismissible">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
        <h4><i class="icon fa fa-ban"></i> Error!</h4>
        @Html.ValidationSummary("", new { @class = "text" })
    </div>
}

<div class="col-md-12">
    <div class="box box-solid box-default">
        <div class="box-header with-border">
            <h3 class="box-title">Register a new Dish</h3>
            <div class="box-tools pull-right">
            </div>
        </div>
        <div class="box-body">
            @using (Html.BeginForm("Edit", "Dishes", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.HiddenFor(model => model.idRestaurant)
                @Html.HiddenFor(model => model.dish.IdDish)
                <div class="row">
                    <div class="col-md-12">
                        <div class="box box-solid box-primary">
                            <div class="box-header with-border">
                                <h3 class="box-title">Information</h3>
                                <div class="box-tools pull-right">
                                </div>
                            </div>
                            <div class="box-body">
                                <div class="col-md-8">
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.dish.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.dish.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.dish.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.dish.Description, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.dish.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-dollar"></i></span>
                                                @Html.EditorFor(model => model.dish.Price, new { htmlAttributes = new { @class = "form-control", type = "number", step = "any", min = 0 } })

                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.restaurant.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-8">
                                            @Html.ListBoxFor(m => m.restTypesId, Model.selectedItems)
                                        </div>
                                        <div class="col-md-2">
                                            <button type="button" data-toggle="modal" data-target="#modalAddType" class="btn btn-block btn-success">
                                                <i class="fa fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="box box-solid box-primary">
                                <div class="box-header with-border">
                                    <h3 class="box-title">Photos</h3>
                                    <div class="box-tools pull-right" id="filecontainer">
                                        @Html.HiddenFor(model => model.uploadFilesNames)
                                        @Html.HiddenFor(model => model.deletedFilesIds)
                                        <input type="file" name="files[]" id="uploadFiles" accept=".jpg,.jpeg,.png" multiple />
                                    </div>
                                </div>
                                <div class="row timeline-body" id="contentImages">
                                    @foreach (var photo in Model.photos)
                                    {
                                        <div class="col-md-3" style="overflow: hidden; height: 250px;margin-bottom:10px;" id="image_@photo.IdPhoto">
                                            <a class="fa fa-remove btn btn-danger" style="float:right;position: absolute;" OnClick="deleteImageId(this)" index-element="@photo.IdPhoto"></a>
                                            <img class='img-responsive img-rounded' src=@Url.Action("ShowPhotoById", "Locals", new {id = photo.IdPhoto}) />
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="box-footer">
                    <a class="btn btn-default" href="@Url.Action("Index", "Locals", new {id = Model.idRestaurant})">Back to List</a>
                    <button type="submit" value="Submit" class="btn btn-info pull-right">Submit</button>
                </div>
            }
        </div>
    </div>
</div>


<div class="modal" id="modalAddType">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title"> Create a Type</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.tipos.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.tipos.Name, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Cancel</button>
                <button type="button" id="createType" class="btn btn-primary">Create</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@section Scripts {
    @Scripts.Render("~/Scripts/Dishes/Edit")
    @Scripts.Render("~/AdminLTE/plugins/select2/js")
}