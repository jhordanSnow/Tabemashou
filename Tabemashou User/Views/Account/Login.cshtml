@model Tabemashou_User.Models.LoginViewModel
@{
    Layout = null;
    ViewBag.Title = "Log in";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Tabemashou_Admin</title>
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">

    @Styles.Render("~/AdminLTE/bootstrap/css")
    @Styles.Render("~/AdminLTE/plugins/font-awesome/css")
    @Styles.Render("~/AdminLTE/plugins/ionicons/css")
    @Styles.Render("~/AdminLTE/dist/css")
    @Styles.Render("~/AdminLTE/plugins/icheck/css/sqare/blue")

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
</head>
<body class="hold-transition login-page">
    <div class="login-box">
        <div class="login-logo">
            <a href="@Url.Action("Index", "Home")">Welcome to <b>Tabemashou!</b></a>
        </div>
        <div class="login-box-body">
            <p class="login-box-msg">Sign in to start your session</p>
            @if (TempData["Success"] != null)
            {
                <div class="callout callout-success">
                    <h4>Registration Success!</h4>
                    <p>Please log in to continue.</p>
                </div>
            }
            @using (Html.BeginForm("Login", "Account", new {ReturnUrl = ViewBag.ReturnUrl}, FormMethod.Post, new {role = "form"}))
            {
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                @Html.AntiForgeryToken()
                <div class="form-group has-feedback">
                    @Html.TextBoxFor(m => m.Username, new {@class = "form-control", type = "text", placeholder = "Username"})
                    @Html.ValidationMessageFor(m => m.Username, "", new {@class = "text-danger"})
                    <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                </div>
                <div class="form-group has-feedback">
                    @Html.PasswordFor(m => m.Password, new {@class = "form-control", type = "password", placeholder = "Password"})
                    @Html.ValidationMessageFor(m => m.Password, "", new {@class = "text-danger"})
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                </div>
                <div class="row">
                  
                    <div class="col-xs-4">
                        <button type="submit" class="btn btn-primary btn-block btn-flat">Sign In</button>
                    </div>
                </div>
            }
            <div class="text-center">
                <a href="@Url.Action("Register", "Account")" class="text-center">Register as a new user</a>
            </div>
        </div>
    </div>

    @Scripts.Render("~/AdminLTE/plugins/jquery/js")
    @Scripts.Render("~/AdminLTE/bootstrap/js")
    @Scripts.Render("~/AdminLTE/plugins/icheck/js")
    @Scripts.Render("~/AdminLTE/plugins/jquery-validate/js")
    @Scripts.Render("~/Scripts/Account/Login")

</body>
</html>
